!function(){"use strict";var e={771:function(e,t,n){e.exports=n.p+"3b5bf5d8808b2f69dc93.png"},84:function(e,t,n){e.exports=n.p+"be477f46c50757f14802.png"},617:function(e,t,n){e.exports=n.p+"06170a03ad0b87abc0cc.png"},774:function(e,t,n){e.exports=n.p+"2e68ff2310a781480a3b.png"},689:function(e,t,n){e.exports=n.p+"4c7210e42f7571d8ad5b.png"},475:function(e,t,n){e.exports=n.p+"1c7f1e69704a62f4c8d8.png"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.p="",function(){function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function n(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}var r,o;return r=n,(o=[{key:"_showInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._inputErrorClass)}},{key:"toggleButton",value:function(){this._hasValidInput()?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass))}},{key:"_hasValidInput",value:function(){return this._inputList.every((function(e){return!0===e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var t,n=this;this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList=function(t){if(Array.isArray(t))return e(t)}(t=this._form.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e),n.toggleButton()}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}}])&&t(r.prototype,o),n}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n,r){var o=t.data,i=t.handleCardClick,a=t.handleDeleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=o.name,this._link=o.link,this._userId=o.owner._id,this._cardId=o._id,this._ownerId=r,this._handleCardClick=i,this._handleDeleteCard=a,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__image").addEventListener("click",(function(){return e._handleCardClick({link:e._link,name:e._name})})),this._element.querySelector(".card__like").addEventListener("click",(function(t){return e._handleLikeIcon(t)})),this._element.querySelector(".card__delete").addEventListener("click",(function(){return e._handleDeleteCard(e)})),this._setDeleteButton()}},{key:"_handleLikeIcon",value:function(e){e.target.classList.toggle("card__like_active")}},{key:"_setDeleteButton",value:function(){this._userId!==this._ownerId&&(this._element.querySelector(".card__delete").style.display="none")}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__image").style.backgroundImage="url(".concat(this._link,")"),this._element.querySelector(".card__title").textContent=this._name,this._element}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this.items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&a(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(".".concat(t)),this._handleEscUp=this._handleEscUp.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscUp",value:function(e){"Escape"==e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("close-button"))&&e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscUp)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscUp)}}])&&u(t.prototype,n),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._cardImage=t._popupElement.querySelector(".popup__preview-image"),t}return t=a,(n=[{key:"open",value:function(e){this._popupElement.querySelector(".popup__caption").textContent=e.name,this._cardImage.src=e.link,this._cardImage.alt="Preview of ".concat(e.name),f(m(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),a}(l);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function S(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._popupForm=t._popupElement.querySelector(".popup__form"),t._handleFormSubmit=r,t._inputs=t._popupElement.querySelectorAll(".popup__input"),t._values={},t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputs.forEach((function(t){e._values[t.name]=t.value})),this._values}},{key:"setEventListeners",value:function(){var e=this;g(w(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){this._popupForm.reset(),g(w(a.prototype),"close",this).call(this)}}])&&b(t.prototype,n),a}(l);function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.nameSelector,r=t.jobSelector,o=t.imageSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(".".concat(n)),this._jobElement=document.querySelector(".".concat(r)),this._imageElement=document.querySelector(".".concat(o))}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,image:this._imageElement.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.aboutMe;this._nameElement.textContent=t,this._jobElement.textContent=n}},{key:"setUserAvatar",value:function(e){var t=e.link;this._imageElement.src=t}}])&&j(t.prototype,n),e}(),O=(n(475),n(689),n(84),n(771),n(617),n(774),".cards-grid"),P={editFormElement:document.querySelector(".popup_type_edit").querySelector(".popup__form"),addFormElement:document.querySelector(".popup_type_add").querySelector(".popup__form"),editImageProfileFormElement:document.querySelector(".popup_type_profile-image").querySelector(".popup__form"),profileNameElement:document.querySelector(".profile__name"),profileJobElement:document.querySelector(".profile__about-me"),profileImageElement:document.querySelector(".profile__image"),profileImagePopupElement:document.querySelector(".popup__input_image_link"),profileNamePopupElement:document.querySelector(".popup__input_field_name"),profileJobPopupElement:document.querySelector(".popup__input_field_about-me")},L={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"submit-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.token=t.token,this.groupId=t.groupId}var t,n;return t=e,(n=[{key:"getProfileInfo",value:function(){return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/users/me/"),{headers:{authorization:this.token,"Content-Type":"application/json"}}).then((function(e){return e.ok?(console.log("Data load correctly, code status: ".concat(e.status)),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"saveProfileInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/users/me"),{method:"PATCH",headers:{authorization:this.token,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?(console.log("Code status: ".concat(e.status,",\ndata saved correctly.")),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"saveProfileImage",value:function(e){var t=e.avatar;return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this.token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(e){return e.ok?(console.log("Code status: ".concat(e.status,",\nimage saved correctly.")),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getCards",value:function(){return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/cards/"),{headers:{authorization:this.token,"Content-Type":"application/json"}}).then((function(e){return e.ok?(console.log("Data load correctly, code status: ".concat(e.status)),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"saveCards",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/cards"),{method:"POST",headers:{authorization:this.token,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:n})}).then((function(e){return e.ok?(console.log("Code status: ".concat(e.status,",\ncard saved correctly.")),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCards",value:function(e){var t=e.cardId;return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this.token,"Content-Type":"application/json"}}).then((function(e){return e.ok?(console.log("Code status: ".concat(e.status,",\ncard deleted correctly.")),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"likeCards",value:function(e){var t=e.cardId;return fetch("".concat(this.baseUrl,"/").concat(this.groupId,"/likes/").concat(t),{method:"PUT",headers:{authorization:this.token,"Content-Type":"application/json"}}).then((function(e){return e.ok?(console.log("Code status: ".concat(e.status,",\ncard liked correctly.")),e.json()):Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&q(t.prototype,n),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=x(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function x(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function F(e,t){return F=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},F(e,t)}function A(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&F(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return A(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._popupForm=t._popupElement.querySelector(".popup__form"),t._handleFormSubmit=r,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;B(D(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(),e.close()}))}},{key:"close",value:function(){B(D(a.prototype),"close",this).call(this)}}])&&U(t.prototype,n),a}(l);function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var M=new T({baseUrl:"https://around.nomoreparties.co/v1/",token:"d32f6df6-a478-44c7-98e2-39f20efb7fb4",groupId:"group-12"});Promise.all([M.getCards(),M.getProfileInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];N.items=o,N.renderItems();var a=i.name,c=i.about,u=i.avatar;H.setUserInfo({name:a,aboutMe:c}),H.setUserAvatar({link:u})})).catch((function(e){console.log(e)}));var N=new c({renderer:function(e){Y(e)}},O),J=new v("popup_type_preview"),H=new I({nameSelector:"profile__name",jobSelector:"profile__about-me",imageSelector:"profile__image"}),$=new C({popupSelector:"popup_type_edit",handleFormSubmit:function(e){M.saveProfileInfo({name:e.name,about:e.aboutMe}).then((function(e){H.setUserInfo({name:e.name,aboutMe:e.about})}))}}),G=new C({popupSelector:"popup_type_add",handleFormSubmit:function(e){var t={name:e.title,link:e.link};M.saveCards({name:t.name,link:t.link}).then((function(e){Y(e)}))}}),K=new C({popupSelector:"popup_type_profile-image",handleFormSubmit:function(e){M.saveProfileImage({avatar:e.link}).then((function(e){H.setUserAvatar({link:e.avatar})}))}}),Q=new r(L,P.editFormElement),W=new r(L,P.addFormElement),X=new r(L,P.editImageProfileFormElement),Y=function(e){var t=new i({data:e,handleCardClick:function(e){J.open(e)},handleDeleteCard:function(e){var n=new V({popupSelector:"popup_type_delete-card",handleFormSubmit:function(){t.removeCard(),M.deleteCards({cardId:e._cardId})}});n.open(),n.setEventListeners()}},"#card-template","cbc21d4eeb636c558502f8d0");return N.addItem(t.generateCard()),t};Q.enableValidation(),W.enableValidation(),X.enableValidation(),J.setEventListeners(),$.setEventListeners(),G.setEventListeners(),K.setEventListeners(),document.querySelector(".edit-button").addEventListener("click",(function(){var e=H.getUserInfo(),t=e.name,n=e.job;P.profileNamePopupElement.value=t,P.profileJobPopupElement.value=n,$.open()})),document.querySelector(".add-button").addEventListener("click",(function(){G.open(),W.toggleButton()})),document.querySelector(".profile__image-wrapper").addEventListener("click",(function(){var e=H.getUserInfo().image;P.profileImagePopupElement.value=e,K.open(),X.toggleButton()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUksYUFDWjVCLEVBQUk2QixZQUFZLENBQUUvQixPQUFRMUcsRUFBS1UsYUFHbkM2SCxFQUFnQkQsT0FDaEJDLEVBQWdCRyxzQkhwRU4saUJBd0NPLDRCR2dDckIsT0FEQXhCLEVBQVl5QixRQUFRUCxFQUFZUSxnQkFDekJSLEdBUVRILEVBQWtCWSxtQkFDbEJYLEVBQWlCVyxtQkFDakJWLEVBQThCVSxtQkFDOUJyQixFQUFrQmtCLG9CQUNsQmpCLEVBQWNpQixvQkFDZGYsRUFBYWUsb0JBQ2JYLEVBQXNCVyxvQkFPSHBILFNBQVNqRCxjSHBGZCxnQkdxRkhrQixpQkFBaUIsU0FBUyxXQUNuQyxNQUFzQjZILEVBQVMwQixjQUF2QjFJLEVBQVIsRUFBUUEsS0FBTThELEVBQWQsRUFBY0EsSUFDZEksRUFBQUEsd0JBQUFBLE1BQXlDbEUsRUFDekNrRSxFQUFBQSx1QkFBQUEsTUFBd0NKLEVBQ3hDdUQsRUFBY2EsVUFHSWhILFNBQVNqRCxjSDNGaEIsZUc0RkRrQixpQkFBaUIsU0FBUyxXQUNwQ29JLEVBQWFXLE9BQ2JKLEVBQWlCekksa0JBR1E2QixTQUFTakQsY0hoR2QsMkJHaUdIa0IsaUJBQWlCLFNBQVMsV0FDM0MsSUFBUTRFLEVBQVVpRCxFQUFTMEIsY0FBbkIzRSxNQUNSRyxFQUFBQSx5QkFBQUEsTUFBMENILEVBQzFDNEQsRUFBc0JPLE9BQ3RCSCxFQUE4QjFJLGtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCIvKipcbiAqIFZhbGlkYXRpb24gZm9yIGFsbCB0aGUgcG9wdXBzLlxuICogQHBhcmFtICB7fSBzZXR0aW5ncyAtIHZhbGlkYXRpb25TZXR0aW5ncyBvYmplY3QgZm9yIHRoZSBpbnB1dHMgdmFsaWRhdGlvbi5cbiAqIEBwYXJhbSAge30gZm9ybUVsZW1lbnQgLSBhZGRGb3JtIG9yIGVkaXRGb3JtIHBvcHVwLlxuICovXG5jbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3JcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3NcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3NcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzc1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWxlbWVudFxuICB9XG5cbiAgLyoqXG4gICAqIFByaXZhdGUgbWV0aG9kIHRvIHNob3cgYW4gZXJyb3JcbiAgICogQHBhcmFtICB7fSBpbnB1dCAtIElucHV0IHBhc3NlZCB0aHJvdWdoIHRoZSBmb3Jtcy5cbiAgICovXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYClcbiAgICAvLyBBZGQgZXJyb3IgbWVzc2FnZSBhbmQgY2xhc3NcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcylcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZVxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcylcbiAgfTtcblxuICAvKipcbiAgICogUHJpdmF0ZSBtZXRob2QgdG8gaGlkZSBhbiBlcnJvci5cbiAgICogQHBhcmFtICB7fSBpbnB1dCAtIElucHV0IHBhc3NlZCB0aHJvdWdoIHRoZSBmb3Jtcy5cbiAgICovXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYClcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcylcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpXG4gIH1cblxuICAvKipcbiAgICogUHVibGljIG1ldGhvZCB0aGF0IHRvZ2dsZSB0aGUgc3VibWl0IGJ1dHRvbi5cbiAgICovXG4gIHRvZ2dsZUJ1dHRvbigpIHtcbiAgICBpZiAodGhpcy5faGFzVmFsaWRJbnB1dCgpKSB7XG4gICAgICAvLyBNYWtlIHRoZSBidXR0b24gZW5hYmxlZFxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2VcbiAgICAgIC8vIFJlbW92ZSB0aGUgZGlzYWJsZWQgY2xhc3MgZm9yIHRoZSBidXR0b25cbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE1ha2UgdGhlIGJ1dHRvbiBkaXNhYmxlZFxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZVxuICAgICAgLy8gQWRkIHRoZSBkaXNhYmxlZCBjbGFzcyBmb3IgdGhlIGJ1dHRvblxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcylcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgdGhlIGlucHV0cyBhcmUgdmFsaWQuXG4gICAqL1xuICBfaGFzVmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQgPT09IHRydWUpXG4gIH1cblxuICAvKipcbiAgICogSWYgdGhlIGNvbmRpdGlvbiBpcyB0cnVlLCBoaWRlIHRoZSBlcnJvciwgaWYgaXQgaXMgZmFsc2UsIHNob3cgdGhlIGVycm9yLlxuICAgKiBAcGFyYW0gIHt9IGlucHV0IC0gSW5wdXQgcGFzc2VkIHRocm91Z2ggdGhlIGZvcm1zLlxuICAgKi9cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCkge1xuICAgIGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0KVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGUgdGhlIGV2ZW50IGxpc3RlbmVycyBmb3IgdGhlIGlucHV0cy5cbiAgICovXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpXG4gICAgLy8gR3JhYiBlYWNoIG9uZSBvZiB0aGUgaW5wdXRzXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV1cbiAgICAvLyBUb2dnbGUgdGhlIGJ1dHRvbiBiZWZvcmUgd2Ugc3RhcnQgbGlzdGVuaW5nIHRvIHRoZSBpbnB1dCBldmVuLCBvdGhlcndpc2UgdGhlIGJ1dHRvbiB3aWxsIGJlIGFjdGl2ZSB3aGVuIHdlIGxvYWQgdGhlIHBhZ2UgZXZlbiBpZiB0aGUgaW5wdXQgZmllbGRzIGFyZSBpbnZhbGlkXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICAgICAgLy8gQ2hlY2sgdmFsaWRpdHkgb2YgdGhlIGlucHV0XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dClcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b24oKVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIEVuYWJsZSB0aGUgdmFsaWRhdGlvbiBmb3IgdGhlIGZvcm1zLlxuICAgKi9cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IGV2dC5wcmV2ZW50RGVmYXVsdCgpKSAgLy8gUHJldmVudCB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiB0aGUgZm9ybSB3aGVuIHdlIGFyZSBzdWJtaXR0aW5nIHNvbWV0aGluZywgdGhlbiB3ZSBjYW4gbG9vcCBvdXIgaW5wdXQgZWxlbWVudHNcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpICAvLyBJbXBsZW1lbnRhdGlvbiBvZiB0aGUgbGlzdGVuZXJcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xuIiwiLyoqXG4gKiBIYW5kbGUgdGhlIGNyZWF0aW9uIG9mIHRoZSBjYXJkIGVsZW1lbnQuXG4gKiBAcGFyYW0gIHt9IGRhdGEgLSBDYXJkIG5hbWUgYW5kIGNhcmQgbGluay5cbiAqIEBwYXJhbSAge30gY2FyZFNlbGVjdG9yIC0gQ2FyZCBpZCB0ZW1wbGF0ZS5cbiAqL1xuY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVEZWxldGVDYXJkIH0sIGNhcmRTZWxlY3Rvciwgb3duZXJJZCkge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl91c2VySWQgPSBkYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl9jYXJkSWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLl9vd25lcklkID0gb3duZXJJZDtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCA9IGhhbmRsZURlbGV0ZUNhcmQ7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICB9XG5cbiAgLyoqXG4gICAqIEV2ZW50IGxpc3RlbmVycyBoYW5kbGVyLlxuICAgKi9cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVDYXJkQ2xpY2soeyBsaW5rOiB0aGlzLl9saW5rLCBuYW1lOiB0aGlzLl9uYW1lIH0pKVxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHRoaXMuX2hhbmRsZUxpa2VJY29uKGV2dCkpXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fZGVsZXRlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKHRoaXMpKVxuICAgIHRoaXMuX3NldERlbGV0ZUJ1dHRvbigpXG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIHRoZSBsaWtlIGJ1dHRvbi5cbiAgICogQHBhcmFtICB7fSBldnRcbiAgICovXG4gIF9oYW5kbGVMaWtlSWNvbihldnQpIHtcbiAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ2NhcmRfX2xpa2VfYWN0aXZlJylcbiAgfVxuXG4gIF9zZXREZWxldGVCdXR0b24oKSB7XG4gICAgaWYgKHRoaXMuX3VzZXJJZCAhPT0gdGhpcy5fb3duZXJJZCkge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fZGVsZXRlJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2xvbmUgdGhlIGNhcmQgdGVtcGxhdGUuXG4gICAqL1xuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkJykuY2xvbmVOb2RlKHRydWUpXG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIHRoZSBjYXJkIGdlbmVyYXRpb24uXG4gICAqL1xuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKClcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1hZ2UnKS5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7dGhpcy5fbGlua30pYFxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnRcbiAgfVxuXG4gIHJlbW92ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKVxuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcbiIsImNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBzZWxlY3Rvcikge1xuICAgIHRoaXMuaXRlbXMgPSBpdGVtc1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XG4gIH1cblxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZWN0aW9uO1xuIiwiY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7cG9wdXBTZWxlY3Rvcn1gKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NVcCA9IHRoaXMuX2hhbmRsZUVzY1VwLmJpbmQodGhpcyk7XG4gIH1cblxuICBfaGFuZGxlRXNjVXAoZXZ0KSB7XG4gICAgLy8gUHJldmVudCBkZWZhdWx0IGFuZCBpZiBldmVudCB3YXMgb24gRVNDIGJ1dHRvbiAtPiBjYWxsIFwiY2xvc2VcIiBtZXRob2RcbiAgICBpZiAoZXZ0LmtleSA9PSAnRXNjYXBlJykge1xuICAgICAgdGhpcy5jbG9zZSgpXG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgLy8gQ3JlYXRlIGFuIGV2ZW50IGxpc3RlbmVyIGZvciBjbGljayBvbiB0aGUgQ0xPU0UgYnV0dG9uIG9yIHB1cHVwIGhhbGYtdHJhc3BhcmVudCBiYWNrZ3JvdW5kXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cCcpIHx8IGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjbG9zZS1idXR0b24nKSkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgLy8gYWRkcyBhIG5ldyBjbGFzcyBhbmQgYW4gZXZlbnQgbGlzdGVuZXIsIHRvIGxpc3RlbiB0aGUgRVNDIGJ1dHRvblxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjVXApO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgLy8gcmVtb3ZlcyBhIG5ldyBjbGFzcyB3ZSBhZGRlZCBhbmQgcmVtb3ZlcyBhbiBldmVudCBsaXN0ZW5lciBmb3IgdGhlIEVTQyBidXR0b25cbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY1VwKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cDtcbiIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19wcmV2aWV3LWltYWdlJyk7XG4gIH1cblxuICBvcGVuKGRhdGEpIHtcbiAgICAvLyBwdXRzICduYW1lJyBmcm9tIGFyZ3MgdG8gdGhlICcucG9wdXBfX2NhcHRpb24nIHNlbGVjdG9yXG4gICAgLy8gZmluZCBpbWFnZSBieSB0aGUgJ3BvcHVwX19pbWFnZScgc2VsZWN0b3IsIHNldCAnc3JjJyBhbmQgJ2FsdCcgZm9yIGl0XG4gICAgLy8gY2FsbCBzdXBlci5vcGVuKCksIGl0IHdpbGwgY2FsbCB0aGUgb3JnaW5hbCBtZXRob2QgZnJvbSB0aGUgb3JpZ2luYWwgUG9wdXAgY2xhc3NcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19jYXB0aW9uJykudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IGRhdGEubGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gYFByZXZpZXcgb2YgJHtkYXRhLm5hbWV9YDtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoSW1hZ2U7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XG5cbmNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCB9KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICAgIHRoaXMuX2lucHV0cyA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XG4gICAgdGhpcy5fdmFsdWVzID0ge307XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgdGhpcy5fdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWVcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KVxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xuIiwiY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IsIGltYWdlU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7bmFtZVNlbGVjdG9yfWApO1xuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtqb2JTZWxlY3Rvcn1gKTtcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbWFnZVNlbGVjdG9yfWApO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgLy8gUmV0dXJucyBhbiBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdXNlci5cbiAgICAvLyBUaGlzIG1ldGhvZCB3aWxsIGJlIGhhbmR5IGZvciBjYXNlcyB3aGVuIGl0J3MgbmVjZXNzYXJ5IHRvIGRpc3BsYXkgdGhlIHVzZXJcbiAgICAvLyBkYXRhIGluIHRoZSBvcGVuIGZvcm0uXG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50LFxuICAgICAgam9iOiB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50LFxuICAgICAgaW1hZ2U6IHRoaXMuX2ltYWdlRWxlbWVudC5zcmNcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dE1lIH0pIHtcbiAgICAvLyBUYWtlcyBuZXcgdXNlciBkYXRhIGFuZCBhZGRzIGl0IG9uIHRoZSBwYWdlLlxuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50ID0gYWJvdXRNZTtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIoeyBsaW5rIH0pIHtcbiAgICAvLyBUYWtlcyBuZXcgdXNlciBhdmF0YXIgYW5kIGFkZHMgaXQgb24gdGhlIHBhZ2UuXG4gICAgdGhpcy5faW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87XG4iLCJpbXBvcnQgcGFsb3VzZUZhbGxzIGZyb20gXCIuLi9pbWFnZXMvcGFsb3VzZS1mYWxscy5wbmdcIjtcbmltcG9ydCBnaG9zdFRvd24gZnJvbSBcIi4uL2ltYWdlcy9naG9zdC10b3duLW9mLWJvZGllLnBuZ1wiO1xuaW1wb3J0IGNhckZvcmVzdCBmcm9tIFwiLi4vaW1hZ2VzL2Nhci1mb3Jlc3QucG5nXCI7XG5pbXBvcnQgYnlvZG9UZW1wbGUgZnJvbSBcIi4uL2ltYWdlcy9ieW9kby1pbi10ZW1wbGUucG5nXCI7XG5pbXBvcnQgZm9ydEplZmZlcnNvbiBmcm9tIFwiLi4vaW1hZ2VzL2ZvcnQtamVmZmVyc29uLnBuZ1wiO1xuaW1wb3J0IGdhcmRlckdvZHMgZnJvbSBcIi4uL2ltYWdlcy9nYXJkZW4tb2YtdGhlLWdvZHMucG5nXCI7XG5cbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIlBhbG91c2UgRmFsbHNcIixcbiAgICBsaW5rOiBwYWxvdXNlRmFsbHNcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiR2hvc3QgdG93biBvZiBCb2RpZVwiLFxuICAgIGxpbms6IGdob3N0VG93blxuICB9LFxuICB7XG4gICAgbmFtZTogXCJDYXIgRm9yZXN0XCIsXG4gICAgbGluazogY2FyRm9yZXN0XG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkJ5b2RvLUluIFRlbXBsZVwiLFxuICAgIGxpbms6IGJ5b2RvVGVtcGxlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkZvcnQgSmVmZmVyc29uXCIsXG4gICAgbGluazogZm9ydEplZmZlcnNvblxuICB9LFxuICB7XG4gICAgbmFtZTogXCJHYXJkZW4gb2YgdGhlIEdvZHNcIixcbiAgICBsaW5rOiBnYXJkZXJHb2RzXG4gIH1cbl07XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RvcnMgPSB7XG4gIGNhcmRMaXN0OiAnLmNhcmRzLWdyaWQnLFxuICBjYXJkVGVtcGxhdGU6ICcjY2FyZC10ZW1wbGF0ZScsXG4gIHByZXZpZXdQb3B1cDogJ3BvcHVwX3R5cGVfcHJldmlldycsXG4gIHByb2ZpbGVQb3B1cDogJ3BvcHVwX3R5cGVfZWRpdCcsXG4gIGNhcmRQb3B1cDogJ3BvcHVwX3R5cGVfYWRkJyxcbiAgZWRpdEltYWdlUG9wdXA6ICdwb3B1cF90eXBlX3Byb2ZpbGUtaW1hZ2UnLFxuICBkZWxldGVDYXJkUG9wdXA6ICdwb3B1cF90eXBlX2RlbGV0ZS1jYXJkJyxcbiAgbmFtZTogJ3Byb2ZpbGVfX25hbWUnLFxuICBqb2I6ICdwcm9maWxlX19hYm91dC1tZScsXG4gIGltYWdlOiAncHJvZmlsZV9faW1hZ2UnLFxuICBlZGl0QnV0dG9uOiAnLmVkaXQtYnV0dG9uJyxcbiAgYWRkQnV0dG9uOiAnLmFkZC1idXR0b24nLFxuICBwcm9maWxlSW1hZ2VCdXR0b246ICcucHJvZmlsZV9faW1hZ2Utd3JhcHBlcidcbn07XG5cbmV4cG9ydCBjb25zdCBlbGVtZW50cyA9IHtcbiAgZWRpdEZvcm1FbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9lZGl0JykucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyksXG4gIGFkZEZvcm1FbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9hZGQnKS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKSxcbiAgZWRpdEltYWdlUHJvZmlsZUZvcm1FbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9wcm9maWxlLWltYWdlJykucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyksXG4gIHByb2ZpbGVOYW1lRWxlbWVudDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX25hbWUnKSxcbiAgcHJvZmlsZUpvYkVsZW1lbnQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hYm91dC1tZScpLFxuICBwcm9maWxlSW1hZ2VFbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faW1hZ2UnKSxcbiAgcHJvZmlsZUltYWdlUG9wdXBFbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2ltYWdlX2xpbmsnKSxcbiAgcHJvZmlsZU5hbWVQb3B1cEVsZW1lbnQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfZmllbGRfbmFtZScpLFxuICBwcm9maWxlSm9iUG9wdXBFbGVtZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2ZpZWxkX2Fib3V0LW1lJylcbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInN1Ym1pdC1idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIlxufTtcblxuZXhwb3J0IGNvbnN0IGFwaUNvbmZpZyA9IHtcbiAgYmFzZVVybDogJ2h0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvJyxcbiAgdG9rZW46ICdkMzJmNmRmNi1hNDc4LTQ0YzctOThlMi0zOWYyMGVmYjdmYjQnLFxuICBncm91cElkOiAnZ3JvdXAtMTInXG59XG5cbmV4cG9ydCBjb25zdCBvd25lcklkID0gJ2NiYzIxZDRlZWI2MzZjNTU4NTAyZjhkMCc7XG4iLCJjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICB0aGlzLmJhc2VVcmwgPSBjb25maWcuYmFzZVVybDtcbiAgICB0aGlzLnRva2VuID0gY29uZmlnLnRva2VuO1xuICAgIHRoaXMuZ3JvdXBJZCA9IGNvbmZpZy5ncm91cElkO1xuICB9XG5cbiAgZ2V0UHJvZmlsZUluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vJHt0aGlzLmdyb3VwSWR9L3VzZXJzL21lL2AsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy50b2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBEYXRhIGxvYWQgY29ycmVjdGx5LCBjb2RlIHN0YXR1czogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KVxuICB9XG5cbiAgc2F2ZVByb2ZpbGVJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9LyR7dGhpcy5ncm91cElkfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLnRva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgYWJvdXQ6IGFib3V0XG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICBgQ29kZSBzdGF0dXM6ICR7cmVzLnN0YXR1c30sXG5kYXRhIHNhdmVkIGNvcnJlY3RseS5gXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSlcbiAgfVxuXG4gIHNhdmVQcm9maWxlSW1hZ2UoeyBhdmF0YXIgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9LyR7dGhpcy5ncm91cElkfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy50b2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogYXZhdGFyXG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICBgQ29kZSBzdGF0dXM6ICR7cmVzLnN0YXR1c30sXG5pbWFnZSBzYXZlZCBjb3JyZWN0bHkuYFxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4gIH1cblxuICBnZXRDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS8ke3RoaXMuZ3JvdXBJZH0vY2FyZHMvYCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLnRva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYERhdGEgbG9hZCBjb3JyZWN0bHksIGNvZGUgc3RhdHVzOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4gIH1cblxuICBzYXZlQ2FyZHMoeyBuYW1lLCBsaW5rIH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS8ke3RoaXMuZ3JvdXBJZH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLnRva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgbGluazogbGlua1xuICAgICAgfSlcbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgYENvZGUgc3RhdHVzOiAke3Jlcy5zdGF0dXN9LFxuY2FyZCBzYXZlZCBjb3JyZWN0bHkuYFxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4gIH1cblxuICBkZWxldGVDYXJkcyh7IGNhcmRJZCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vJHt0aGlzLmdyb3VwSWR9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy50b2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgYENvZGUgc3RhdHVzOiAke3Jlcy5zdGF0dXN9LFxuY2FyZCBkZWxldGVkIGNvcnJlY3RseS5gXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSlcbiAgfVxuXG4gIGxpa2VDYXJkcyh7IGNhcmRJZCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vJHt0aGlzLmdyb3VwSWR9L2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy50b2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgYENvZGUgc3RhdHVzOiAke3Jlcy5zdGF0dXN9LFxuY2FyZCBsaWtlZCBjb3JyZWN0bHkuYFxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBpO1xuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5jbGFzcyBQb3B1cFdpdGhDb25maXJtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQoKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KVxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhDb25maXJtO1xuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgeyBzZWxlY3RvcnMsIGVsZW1lbnRzLCB2YWxpZGF0aW9uU2V0dGluZ3MsIGFwaUNvbmZpZywgb3duZXJJZCB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCJcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1cIjtcblxuXG4vKioqKioqKlxuICogQVBJICpcbiAqKioqKioqL1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKGFwaUNvbmZpZyk7XG5cblByb21pc2UuYWxsKFthcGkuZ2V0Q2FyZHMoKSwgYXBpLmdldFByb2ZpbGVJbmZvKCldKVxuICAudGhlbigoW2NhcmRzLCBpbmZvXSkgPT4ge1xuICAgIGNhcmRTZWN0aW9uLml0ZW1zID0gY2FyZHM7XG4gICAgY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcbiAgICBjb25zdCB7IG5hbWUsIGFib3V0LCBhdmF0YXIgfSA9IGluZm87XG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dE1lOiBhYm91dCB9KVxuICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoeyBsaW5rOiBhdmF0YXIgfSlcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICB9KVxuXG5cbi8qKioqKioqKioqKioqKioqKioqKioqXG4gKiBJTlNUQU5DRVMgQ1JFQVRJT04gKlxuICoqKioqKioqKioqKioqKioqKioqKiovXG5cbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oe1xuICByZW5kZXJlcjogKGRhdGEpID0+IHtcbiAgICBjcmVhdGVDYXJkKGRhdGEpXG4gIH1cbn0sIHNlbGVjdG9ycy5jYXJkTGlzdClcblxuY29uc3QgaW1hZ2VQcmV2aWV3UG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoc2VsZWN0b3JzLnByZXZpZXdQb3B1cCk7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZVNlbGVjdG9yOiBzZWxlY3RvcnMubmFtZSxcbiAgam9iU2VsZWN0b3I6IHNlbGVjdG9ycy5qb2IsXG4gIGltYWdlU2VsZWN0b3I6IHNlbGVjdG9ycy5pbWFnZVxufSlcblxuY29uc3QgdXNlckluZm9Qb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgcG9wdXBTZWxlY3Rvcjogc2VsZWN0b3JzLnByb2ZpbGVQb3B1cCxcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcbiAgICBhcGkuc2F2ZVByb2ZpbGVJbmZvKHsgbmFtZTogZGF0YS5uYW1lLCBhYm91dDogZGF0YS5hYm91dE1lIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiByZXMubmFtZSwgYWJvdXRNZTogcmVzLmFib3V0IH0pXG4gICAgfSlcbiAgfVxufSk7XG5cbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgcG9wdXBTZWxlY3Rvcjogc2VsZWN0b3JzLmNhcmRQb3B1cCxcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKHJhd0RhdGEpID0+IHtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgbmFtZTogcmF3RGF0YS50aXRsZSxcbiAgICAgIGxpbms6IHJhd0RhdGEubGlua1xuICAgIH07XG4gICAgYXBpLnNhdmVDYXJkcyh7IG5hbWU6IGRhdGEubmFtZSwgbGluazogZGF0YS5saW5rIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY3JlYXRlQ2FyZChyZXMpO1xuICAgIH0pXG4gIH1cbn0pO1xuXG5jb25zdCBlZGl0UHJvZmlsZUltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6IHNlbGVjdG9ycy5lZGl0SW1hZ2VQb3B1cCxcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcbiAgICBhcGkuc2F2ZVByb2ZpbGVJbWFnZSh7IGF2YXRhcjogZGF0YS5saW5rIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckF2YXRhcih7IGxpbms6IHJlcy5hdmF0YXIgfSlcbiAgICB9KVxuICB9XG59KTtcblxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGVsZW1lbnRzLmVkaXRGb3JtRWxlbWVudCk7XG5jb25zdCBhZGRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBlbGVtZW50cy5hZGRGb3JtRWxlbWVudCk7XG5jb25zdCBlZGl0SW1hZ2VQcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25TZXR0aW5ncywgZWxlbWVudHMuZWRpdEltYWdlUHJvZmlsZUZvcm1FbGVtZW50KTtcblxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBDUkVBVEUgQ0FSRCBGVU5DVElPTiAqXG4gKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXcgQ2FyZCh7XG4gICAgZGF0YSxcbiAgICBoYW5kbGVDYXJkQ2xpY2s6IChpbWFnZURhdGEpID0+IHtcbiAgICAgIGltYWdlUHJldmlld1BvcHVwLm9wZW4oaW1hZ2VEYXRhKTtcbiAgICB9LFxuICAgIGhhbmRsZURlbGV0ZUNhcmQ6IChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBkZWxldGVDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoQ29uZmlybSh7XG4gICAgICAgIHBvcHVwU2VsZWN0b3I6IHNlbGVjdG9ycy5kZWxldGVDYXJkUG9wdXAsXG4gICAgICAgIGhhbmRsZUZvcm1TdWJtaXQ6ICgpID0+IHtcbiAgICAgICAgICBjYXJkRWxlbWVudC5yZW1vdmVDYXJkKClcbiAgICAgICAgICBhcGkuZGVsZXRlQ2FyZHMoeyBjYXJkSWQ6IGRhdGEuX2NhcmRJZCB9KVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGRlbGV0ZUNhcmRQb3B1cC5vcGVuKCk7XG4gICAgICBkZWxldGVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG4gIH0sIHNlbGVjdG9ycy5jYXJkVGVtcGxhdGUsIG93bmVySWQpXG4gIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCkpXG4gIHJldHVybiBjYXJkRWxlbWVudFxufTtcblxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogSU5TVEFOQ0VTIElOSVpJQUxJWkFUSU9OICpcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5hZGRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmVkaXRJbWFnZVByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmltYWdlUHJldmlld1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG51c2VySW5mb1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmVkaXRQcm9maWxlSW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKipcbiAqIE9QRU4gQlVUVE9OIEhBTkRMRVJTICpcbiAqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5lZGl0QnV0dG9uKTtcbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGNvbnN0IHsgbmFtZSwgam9iIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBlbGVtZW50cy5wcm9maWxlTmFtZVBvcHVwRWxlbWVudC52YWx1ZSA9IG5hbWU7XG4gIGVsZW1lbnRzLnByb2ZpbGVKb2JQb3B1cEVsZW1lbnQudmFsdWUgPSBqb2I7XG4gIHVzZXJJbmZvUG9wdXAub3BlbigpO1xufSlcblxuY29uc3QgYWRkTW9kYWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5hZGRCdXR0b24pO1xuYWRkTW9kYWxCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIG5ld0NhcmRQb3B1cC5vcGVuKCk7XG4gIGFkZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uKCk7XG59KVxuXG5jb25zdCBwcm9maWxlSW1hZ2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5wcm9maWxlSW1hZ2VCdXR0b24pO1xucHJvZmlsZUltYWdlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBjb25zdCB7IGltYWdlIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBlbGVtZW50cy5wcm9maWxlSW1hZ2VQb3B1cEVsZW1lbnQudmFsdWUgPSBpbWFnZTtcbiAgZWRpdFByb2ZpbGVJbWFnZVBvcHVwLm9wZW4oKTtcbiAgZWRpdEltYWdlUHJvZmlsZUZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uKCk7XG59KVxuXG5cbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInAiLCJGb3JtVmFsaWRhdG9yIiwic2V0dGluZ3MiLCJmb3JtRWxlbWVudCIsInRoaXMiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsImlucHV0IiwiZXJyb3JFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImlkIiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInJlbW92ZSIsIl9oYXNWYWxpZElucHV0IiwiX3N1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwiX2lucHV0TGlzdCIsImV2ZXJ5IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ0b2dnbGVCdXR0b24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkNhcmQiLCJjYXJkU2VsZWN0b3IiLCJvd25lcklkIiwiZGF0YSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNhcmQiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfdXNlcklkIiwib3duZXIiLCJfaWQiLCJfY2FyZElkIiwiX293bmVySWQiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJfY2FyZFNlbGVjdG9yIiwiX2VsZW1lbnQiLCJfaGFuZGxlTGlrZUljb24iLCJfc2V0RGVsZXRlQnV0dG9uIiwidGFyZ2V0IiwidG9nZ2xlIiwic3R5bGUiLCJkaXNwbGF5IiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2dldFRlbXBsYXRlIiwiYmFja2dyb3VuZEltYWdlIiwiU2VjdGlvbiIsInNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY1VwIiwiYmluZCIsImtleSIsImNsb3NlIiwiY29udGFpbnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUG9wdXBXaXRoSW1hZ2UiLCJfY2FyZEltYWdlIiwic3JjIiwiYWx0IiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRzIiwiX3ZhbHVlcyIsInZhbHVlIiwiZXZlbnQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiam9iU2VsZWN0b3IiLCJpbWFnZVNlbGVjdG9yIiwiX25hbWVFbGVtZW50IiwiX2pvYkVsZW1lbnQiLCJfaW1hZ2VFbGVtZW50Iiwiam9iIiwiaW1hZ2UiLCJhYm91dE1lIiwic2VsZWN0b3JzIiwiZWxlbWVudHMiLCJlZGl0Rm9ybUVsZW1lbnQiLCJhZGRGb3JtRWxlbWVudCIsImVkaXRJbWFnZVByb2ZpbGVGb3JtRWxlbWVudCIsInByb2ZpbGVOYW1lRWxlbWVudCIsInByb2ZpbGVKb2JFbGVtZW50IiwicHJvZmlsZUltYWdlRWxlbWVudCIsInByb2ZpbGVJbWFnZVBvcHVwRWxlbWVudCIsInByb2ZpbGVOYW1lUG9wdXBFbGVtZW50IiwicHJvZmlsZUpvYlBvcHVwRWxlbWVudCIsInZhbGlkYXRpb25TZXR0aW5ncyIsIkFwaSIsImNvbmZpZyIsImJhc2VVcmwiLCJ0b2tlbiIsImdyb3VwSWQiLCJmZXRjaCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwidGhlbiIsInJlcyIsIm9rIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwiY2F0Y2giLCJlcnIiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYXZhdGFyIiwiY2FyZElkIiwiUG9wdXBXaXRoQ29uZmlybSIsImFwaSIsImFsbCIsImdldENhcmRzIiwiZ2V0UHJvZmlsZUluZm8iLCJjYXJkcyIsImluZm8iLCJjYXJkU2VjdGlvbiIsInJlbmRlckl0ZW1zIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsInNldFVzZXJBdmF0YXIiLCJjcmVhdGVDYXJkIiwiaW1hZ2VQcmV2aWV3UG9wdXAiLCJ1c2VySW5mb1BvcHVwIiwic2F2ZVByb2ZpbGVJbmZvIiwibmV3Q2FyZFBvcHVwIiwicmF3RGF0YSIsInRpdGxlIiwic2F2ZUNhcmRzIiwiZWRpdFByb2ZpbGVJbWFnZVBvcHVwIiwic2F2ZVByb2ZpbGVJbWFnZSIsImVkaXRGb3JtVmFsaWRhdG9yIiwiYWRkRm9ybVZhbGlkYXRvciIsImVkaXRJbWFnZVByb2ZpbGVGb3JtVmFsaWRhdG9yIiwiY2FyZEVsZW1lbnQiLCJpbWFnZURhdGEiLCJvcGVuIiwiZGVsZXRlQ2FyZFBvcHVwIiwicmVtb3ZlQ2FyZCIsImRlbGV0ZUNhcmRzIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJhZGRJdGVtIiwiZ2VuZXJhdGVDYXJkIiwiZW5hYmxlVmFsaWRhdGlvbiIsImdldFVzZXJJbmZvIl0sInNvdXJjZVJvb3QiOiIifQ==